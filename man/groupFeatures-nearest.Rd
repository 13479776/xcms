% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataClasses.R, R/functions-Params.R, R/methods-Params.R, R/methods-XCMSnExp.R
\docType{class}
\name{groupFeatures-nearest}
\alias{NearestFeaturesParam}
\alias{NearestFeaturesParam-class}
\alias{absMz,NearestFeaturesParam-method}
\alias{absMz<-,NearestFeaturesParam-method}
\alias{absRt}
\alias{absRt,NearestFeaturesParam-method}
\alias{absRt<-}
\alias{absRt<-,NearestFeaturesParam-method}
\alias{groupFeatures,XCMSnExp,NearestFeaturesParam-method}
\alias{groupFeatures-nearest}
\alias{kNN}
\alias{kNN,NearestFeaturesParam-method}
\alias{kNN<-}
\alias{kNN<-,NearestFeaturesParam-method}
\alias{mzVsRtBalance}
\alias{mzVsRtBalance,NearestFeaturesParam-method}
\alias{mzVsRtBalance<-}
\alias{mzVsRtBalance<-,NearestFeaturesParam-method}
\alias{sampleGroups,NearestFeaturesParam-method}
\alias{sampleGroups<-,NearestFeaturesParam-method}
\alias{show,NearestFeaturesParam-method}
\title{Feature alignment based on proximity in the mz-rt space}
\usage{
NearestFeaturesParam(sampleGroups = numeric(), mzVsRtBalance = 10,
  absMz = 0.2, absRt = 15, kNN = 10)

\S4method{show}{NearestFeaturesParam}(object)

\S4method{sampleGroups}{NearestFeaturesParam}(object)

\S4method{sampleGroups}{NearestFeaturesParam}(object) <- value

\S4method{mzVsRtBalance}{NearestFeaturesParam}(object)

\S4method{mzVsRtBalance}{NearestFeaturesParam}(object) <- value

\S4method{absMz}{NearestFeaturesParam}(object)

\S4method{absMz}{NearestFeaturesParam}(object) <- value

\S4method{absRt}{NearestFeaturesParam}(object)

\S4method{absRt}{NearestFeaturesParam}(object) <- value

\S4method{kNN}{NearestFeaturesParam}(object)

\S4method{kNN}{NearestFeaturesParam}(object) <- value

\S4method{groupFeatures}{XCMSnExp,NearestFeaturesParam}(object, param)
}
\arguments{
\item{sampleGroups}{A vector of the same length than samples defining the
sample group assignments.}

\item{mzVsRtBalance}{numeric(1) representing the factor by which mz values are
multiplied before calculating the (euclician) distance between two features.}

\item{absMz}{numeric(1) maximum tolerated distance for mz values.}

\item{absRt}{numeric(1) maximum tolerated distance for rt values.}

\item{kNN}{numeric(1) representing the number of nearest neighbors to check.}

\item{object}{For \code{groupFeatures}: an \code{\link{XCMSnExp}} object
containing the results from a previous feature detection analysis (see
\code{\link{detectFeatures}}).

For all other methods: a \code{NearestFeaturesParam} object.}

\item{value}{The value for the slot.}

\item{param}{A \code{NearestFeaturesParam} object containing all settings for
the feature alignment algorithm.}
}
\value{
The \code{NearestFeaturesParam} function returns a
\code{NearestFeaturesParam} class instance with all of the settings
specified for high resolution single spectra feature alignment.

For \code{groupFeatures}: a \code{\link{XCMSnExp}} object with the
results of the feature alignment step. These can be accessed with the
\code{\link{featureGroups}} method.
}
\description{
This method is inspired by the alignment algorithm of mzMine
[Katajamaa 2006] and performs alignment based on proximity of features in the
space spanned by retention time and mz values.
The method creates first a \emph{master feature list} consisting of all
features from the sample in which most features were identified, and
starting from that, calculates distances to features from the sample with the
next most features. If features are closer than the defined threshold they
are grouped together.

The \code{NearestFeaturesParam} class allows to specify all
settings for the feature alignment based on the \emph{nearest} algorithm.
Instances should be created with the \code{NearestFeaturesParam} constructor.

\code{sampleGroups},\code{sampleGroups<-}: getter and setter
for the \code{sampleGroups} slot of the object.

\code{mzVsRtBalance},\code{mzVsRtBalance<-}: getter and setter
for the \code{mzVsRtBalance} slot of the object.

\code{absMz},\code{absMz<-}: getter and setter for the
\code{absMz} slot of the object.

\code{absRt},\code{absRt<-}: getter and setter for the
\code{absRt} slot of the object.

\code{kNN},\code{kNN<-}: getter and setter for the
\code{kNN} slot of the object.

\code{groupFeatures,XCMSnExp,NearestFeaturesParam}:
performs feature alignment based on the proximity between features from
different samples in the mz-rt range.
}
\section{Slots}{

\describe{
\item{\code{.__classVersion__,sampleGroups,mzVsRtBalance,absMz,absRt,kNN}}{See corresponding parameter above. \code{.__classVersion__} stores
the version from the class. Slots values should exclusively be accessed
\emph{via} the corresponding getter and setter methods listed above.}
}}
\note{
These methods and classes are part of the updated and modernized
\code{xcms} user interface which will eventually replace the
\code{\link{group}} methods. All of the settings to the alignment algorithm
can be passed with a \code{NearestFeaturesParam} object.

Calling \code{groupFeatures} on an \code{XCMSnExp} object will cause
all eventually present previous alignment results to be dropped.
}
\examples{

## Create a NearestFeaturesParam object
p <- NearestFeaturesParam(kNN = 3)
p

##############################
## feature detection and alignment.
##
## Below we perform first a feature detection (using the matchedFilter
## method) on some of the test files from the faahKO package followed by
## a feature alignment using the "nearest" method.
library(faahKO)
library(MSnbase)
fls <- dir(system.file("cdf/KO", package = "faahKO"), recursive = TRUE,
           full.names = TRUE)

## Reading 2 of the KO samples
raw_data <- readMSData2(fls[1:2])

## Perform the feature detection using the matchedFilter method.
mfp <- MatchedFilterParam(snthresh = 20, binSize = 1)
res <- detectFeatures(raw_data, param = mfp)

head(features(res))
## The number of features identified per sample:
table(features(res)[, "sample"])

## Performing the feature alignment
p <- NearestFeaturesParam()
res <- groupFeatures(res, param = p)

## The results from the feature alignment:
featureGroups(res)

## The process history:
processHistory(res)
}
\references{
Katajamaa M, Miettinen J, Oresic M: MZmine: Toolbox for
processing and visualization of mass spectrometry based molecular profile
data. \emph{Bioinformatics} 2006, 22:634-636.
}
\seealso{
The \code{\link{do_groupFeatures_nearest}} core
API function and \code{\link{group.nearest}} for the old user interface.

\code{\link{XCMSnExp}} for the object containing the results of
the feature alignment.

Other feature alignment methods: \code{\link{groupFeatures-density}},
  \code{\link{groupFeatures-mzClust}},
  \code{\link{groupFeatures}}
}

