% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataClasses.R, R/functions-Chromatogram.R,
%   R/methods-Chromatogram.R
\docType{class}
\name{Chromatogram-class}
\alias{Chromatogram-class}
\alias{Chromatogram}
\alias{show,Chromatogram-method}
\alias{rtime,Chromatogram-method}
\alias{intensity,Chromatogram-method}
\alias{mz,Chromatogram-method}
\alias{precursorMz,Chromatogram-method}
\alias{productMz,Chromatogram-method}
\alias{productMz}
\alias{aggregationFun,Chromatogram-method}
\alias{aggregationFun}
\alias{fromFile,Chromatogram-method}
\alias{length,Chromatogram-method}
\alias{as.data.frame,Chromatogram-method}
\alias{filterRt,Chromatogram-method}
\alias{clean,Chromatogram-method}
\title{Representation of chromatographic MS data}
\usage{
Chromatogram(rtime = numeric(), intensity = numeric(), mz = c(NA_real_,
  NA_real_), filterMz = c(NA_real_, NA_real_), precursorMz = c(NA_real_,
  NA_real_), productMz = c(NA_real_, NA_real_), fromFile = integer(),
  aggregationFun = character())

\S4method{show}{Chromatogram}(object)

\S4method{rtime}{Chromatogram}(object)

\S4method{intensity}{Chromatogram}(object)

\S4method{mz}{Chromatogram}(object, filter = FALSE)

\S4method{precursorMz}{Chromatogram}(object)

\S4method{productMz}{Chromatogram}(object)

\S4method{aggregationFun}{Chromatogram}(object)

\S4method{fromFile}{Chromatogram}(object)

\S4method{length}{Chromatogram}(x)

\S4method{as.data.frame}{Chromatogram}(x)

\S4method{filterRt}{Chromatogram}(object, rt)

\S4method{clean}{Chromatogram}(object, all = FALSE)
}
\arguments{
\item{rtime}{\code{numeric} with the retention times (length has to be equal
to the length of \code{intensity}).}

\item{intensity}{\code{numeric} with the intensity values (length has to be
equal to the length of \code{rtime}).}

\item{mz}{\code{numeric(2)} representing the mz value range (min, max)
on which the chromatogram was created. This is supposed to contain the
\emph{real} range of mz values in contrast to the \code{filterMz} below.
If not applicable use \code{mzrange = c(0, 0)}.}

\item{filterMz}{\code{numeric(2)} representing the mz value range (min,
max) that was used to filter the original object on mz dimension. If not
applicable use \code{filterMz = c(0, 0)}.}

\item{precursorMz}{\code{numeric(2)} for SRM/MRM transitions.
Represents the mz of the precursor ion. See details for more information.}

\item{productMz}{\code{numeric(2)} for SRM/MRM transitions.
Represents the mz of the product. See details for more information.}

\item{fromFile}{\code{integer(1)} the index of the file within the
\code{\link{OnDiskMSnExp}} or \code{\link{XCMSnExp}} from which the
chromatogram was extracted.}

\item{aggregationFun}{\code{character} string specifying the function that
was used to aggregate intensity values for the same retention time across
the mz range. Supported are \code{"sum"} (total ion chromatogram),
\code{"max"} (base peak chromatogram), \code{"min"} and \code{"mean"}.}

\item{object}{A \code{Chromatogram} object.}

\item{filter}{For \code{mz}: whether the mz range used to filter the
original object should be returned (\code{filter = TRUE}), or the mz
range calculated on the real data (\code{filter = FALSE}).}

\item{x}{For \code{as.data.frame} and \code{length}: a \code{Chromatogram}
object.}

\item{rt}{For \code{filterRt}: \code{numeric(2)} defining the lower and
upper retention time for the filtering.}

\item{all}{For \code{clean}: \code{logical(1)} whether all \code{0} intensity
value pairs should be removed (defaults to \code{FALSE}).}
}
\value{
For \code{clean}: a \emph{cleaned} \code{Chromatogram} object.
}
\description{
The \code{Chromatogram} class is designed to store
    chromatographic MS data, i.e. pairs of retention time and intensity
    values. Instances of the class can be created with the
    \code{Chromatogram} constructor function but in most cases the dedicated
    methods for \code{\link{OnDiskMSnExp}} and \code{\link{XCMSnExp}}
    objects extracting chromatograms should be used instead (i.e. the
    \code{\link{extractChromatograms}}).

\code{Chromatogram}: create an instance of the
    \code{Chromatogram} class.

\code{rtime} returns the retention times for the rentention time
    - intensity pairs stored in the chromatogram.

\code{intensity} returns the intensity for the rentention time
    - intensity pairs stored in the chromatogram.

\code{mz} get the mz (range) of the chromatogram. The
    function returns a \code{numeric(2)} with the lower and upper mz value.

\code{precursorMz} get the mz of the precursor ion. The
    function returns a \code{numeric(2)} with the lower and upper mz value.

\code{productMz} get the mz of the product chromatogram/ion. The
    function returns a \code{numeric(2)} with the lower and upper mz value.

\code{aggregationFun,aggregationFun<-} get or set the
    aggregation function.

\code{fromFile} returns the value from the \code{fromFile} slot.

\code{length} returns the length (number of retention time -
    intensity pairs) of the chromatogram.

\code{as.data.frame} returns the \code{rtime} and
    \code{intensity} values from the object as \code{data.frame}.

\code{filterRt}: filters the chromatogram based on the provided
    retention time range.

\code{clean}: \emph{cleans} a \code{Chromatogram} class by
    removing all \code{0} and \code{NA} intensity signals (along with the
    associates retention times). By default (if \code{all = FALSE}) \code{0}
    values that are directly adjacent to peaks are kept too. \code{NA}
    values are always removed.
}
\details{
The \code{mz}, \code{filterMz}, \code{precursorMz} and
    \code{productMz} are stored as a \code{numeric(2)} representing a range
    even if the chromatogram was generated for only a single ion (i.e. a
    single mz value). Using ranges for \code{mz} values allow this class to
    be used also for e.g. total ion chromatograms or base peak chromatograms.

    The slots \code{precursorMz} and \code{productMz} allow to represent SRM
    (single reaction monitoring) and MRM (multiple SRM) chromatograms. As
    example, a \code{Chromatogram} for a SRM transition 273 -> 153 will have
    a \code{@precursorMz = c(273, 273)} and a
    \code{@productMz = c(153, 153)}.
}
\section{Slots}{

\describe{
\item{\code{.__classVersion__,rtime,intensity,mz,filterMz,precursorMz,productMz,fromFile,aggregationFun}}{See corresponding parameter above.}
}}

\examples{

## Create a simple Chromatogram object based on random values.
chr <- Chromatogram(intensity = abs(rnorm(1000, mean = 2000, sd = 200)),
        rtime = sort(abs(rnorm(1000, mean = 10, sd = 5))))
chr

## Get the intensities
head(intensity(chr))

## Get the retention time
head(rtime(chr))

## What is the retention time range of the object?
range(rtime(chr))

## Filter the chromatogram to keep only values between 4 and 10 seconds
chr2 <- filterRt(chr, rt = c(4, 10))

range(rtime(chr2))

## Create a simple Chromatogram object

chr <- Chromatogram(rtime = 1:12,
    intensity = c(0, 0, 20, 0, 0, 0, 123, 124343, 3432, 0, 0, 0))

## Remove 0-intensity values keeping those adjacent to peaks
chr <- clean(chr)
intensity(chr)

## Remove all 0-intensity values
chr <- clean(chr, all = TRUE)
intensity(chr)
}
\seealso{
\code{\link{extractChromatograms}} for the method to extract
    \code{Chromatogram} objects from \code{\link{XCMSnExp}} or
    \code{\link[MSnbase]{OnDiskMSnExp}} objects.

    \code{\link{plotChromatogram}} to plot \code{Chromatogram} objects.
}
\author{
Johannes Rainer
}
