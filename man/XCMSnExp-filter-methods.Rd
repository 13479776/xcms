% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-XCMSnExp.R
\docType{methods}
\name{filterFile,XCMSnExp-method}
\alias{XCMSnExp-filter}
\alias{filterFile,XCMSnExp-method}
\alias{filterMz,XCMSnExp-method}
\alias{filterRt,XCMSnExp-method}
\title{XCMSnExp filtering and subsetting

The methods listed on this page allow to filter and subset
\code{\link{XCMSnExp}} objects. Most of them are inherited from the
\code{\link[MSnbase]{OnDiskMSnExp}} object and have been adapted for
\code{\link{XCMSnExp}} to enable subsetting also on the preprocessing
results.}
\usage{
\S4method{filterFile}{XCMSnExp}(object, file)

\S4method{filterMz}{XCMSnExp}(object, mz, msLevel., ...)

\S4method{filterRt}{XCMSnExp}(object, rt, msLevel., adjusted = FALSE)
}
\arguments{
\item{object}{A \code{\link{XCMSnExp}} object.}

\item{file}{For \code{filterFile}: \code{integer} defining the file index
within the object to subset the object by file or \code{character} specifying
the file names to sub set. The indices are expected to be increasingly
ordered, if not they are ordered internally.}

\item{mz}{For \code{filterMz}: \code{numeric(2)} defining the lower and upper
mz value for the filtering.}

\item{msLevel.}{For \code{filterMz}, \code{filterRt}, \code{numeric(1)}
defining the MS level(s) to which operations should be applied or to which
the object should be subsetted.}

\item{...}{Optional additional arguments.}

\item{rt}{For \code{filterRt}: \code{numeric(2)} defining the retention time
window (lower and upper bound) for the filtering.}

\item{adjusted}{For \code{filterRt}: \code{logical} indicating whether the
object should be filtered by original (\code{adjusted = FALSE}) or adjusted
retention times (\code{adjusted = TRUE}).}
}
\value{
All methods return an \code{\link{XCMSnExp}} object.
}
\description{
\code{filterFile}: allows to reduce the
\code{\link{XCMSnExp}} to data from only certain files. Identified features
for these files are retained while eventually all present feature
alignment/grouping information and adjusted retention times are dropped..

\code{filterMz}: filters the data set based on the
provided mz value range. All features and feature groups (aligned features)
falling completely within the provided mz value range are retained (if their
minimal mz value is \code{>= mz[1]} and the maximal mz value \code{<= mz[2]}.
Adjusted retention times, if present, are not altered by the filtering.

\code{filterRt}: filters the data set based on the
provided retention time range. All features and feature groups within
the specified retention time window are retained. Filtering by retention time
does not drop any preprocessing results. The method returns an empty object
if no spectrum or feature is within the specified retention time range.
}
\note{
The \code{filterFile} method removes also process history steps not
related to the files to which the object should be sub-setted and updates
the \code{fileIndex} attribute accordingly. Also, the method does not allow
arbitrary ordering of the files or re-ordering of the files within the
object.
}
\examples{

## Load some of the files from the faahKO package.
library(faahKO)
fs <- c(system.file('cdf/KO/ko15.CDF', package = "faahKO"),
        system.file('cdf/KO/ko16.CDF', package = "faahKO"),
        system.file('cdf/KO/ko18.CDF', package = "faahKO"))
## Read the files
od <- readMSData2(fs)

## Perform feature detection on them using default matched filter settings.
mfp <- MatchedFilterParam()
xod <- detectFeatures(od, param = mfp)

## Subset the dataset to the first and third file.
xod_sub <- filterFile(xod, file = c(1, 3))

## The number of features per file for the full object
table(features(xod)[, "sample"])

## The number of features per file for the subset
table(features(xod_sub)[, "sample"])

basename(fileNames(xod))
basename(fileNames(xod_sub))
}
\author{
Johannes Rainer
}
\seealso{
\code{\link{XCMSnExp}} for base class documentation.
}

