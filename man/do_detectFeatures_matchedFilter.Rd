% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_detectFeatures-functions.R
\name{do_detectFeatures_matchedFilter}
\alias{do_detectFeatures_matchedFilter}
\title{Feature detection in the chromatographic time domain}
\usage{
do_detectFeatures_matchedFilter(mz, int, scantime, valsPerSpect,
  binSize = 0.1, impute = "none", baseValue, distance, fwhm = 30,
  sigma = fwhm/2.3548, max = 5, snthresh = 10, steps = 2, mzdiff = 0.8
  - binSize * steps, index = FALSE)
}
\arguments{
\item{mz}{Numeric vector with the individual m/z values from all scans/
spectra of one file/sample.}

\item{int}{Numeric vector with the individual intensity values from all
scans/spectra of one file/sample.}

\item{scantime}{Numeric vector of length equal to the number of
spectra/scans of the data representing the retention time of each scan.}

\item{valsPerSpect}{Numeric vector with the number of values for each
spectrum.}

\item{binSize}{Numeric of length one specifying the width of the
bins/slices in m/z dimension.}

\item{impute}{Character string specifying the method to be used for missing
value imputation. Allowed values are \code{"none"} (no linear interpolation),
\code{"lin"} (linear interpolation), \code{"linbase"} (linear interpolation
within a certain bin-neighborhood) and \code{"intlin"}. See
\code{\link{imputeLinInterpol}} for more details.}

\item{baseValue}{The base value to which empty elements should be set. This
is only considered for \code{method = "linbase"} and corresponds to the
\code{\link{profBinLinBase}}'s \code{baselevel} argument.}

\item{distance}{For \code{method = "linbase"}: number of non-empty neighboring
element of an empty element that should be considered for linear interpolation. See
details section for more information.}

\item{fwhm}{Numeric of length one specifying the full width at half maximum
of matched filtration gaussian model peak. Only used to calculate the actual
sigma, see below.}

\item{sigma}{Numeric of length one specifying the standard deviation (width)
of the matched filtration model peak.}

\item{max}{Numeric of length one representing the maximum number of peaks
that are expected/will be identified per slice.}

\item{snthresh}{Numeric of length one defining the signal to noise cutoff
to be used in the feature detection step.}

\item{steps}{Numeric of length one defining the number of bins to be
merged before filtration (i.e. the number of neighboring bins that will be
joined to the slice in which filtration and peak detection will be
performed).}

\item{mzdiff}{Numeric of length one defining the minimum difference
in m/z for peaks with overlapping retention times}

\item{index}{Logical specifying whether indicies should be returned instead
of values for m/z and retention times.}
}
\value{
A matrix, each row representing an intentified feature, with columns:
\describe{
\item{mz}{Intensity weighted mean of m/z values of the feature across scans.}
\item{mzmin}{Minimum m/z of the feature.}
\item{mzmax}{Maximum m/z of the feature.}
\item{rt}{Retention time of the feature's midpoint.}
\item{rtmin}{Minimum retention time of the feature.}
\item{rtmax}{Maximum retention time of the feature.}
\item{into}{Integrated (original) intensity of the feature.}
\item{intf}{Integrated intensity of the filtered peak.}
\item{maxo}{Maximum intensity of the feature.}
\item{maxf}{Maximum intensity of the filtered peak.}
\item{i}{Rank of feature in merged EIC (\code{<= max}).}
\item{sn}{Signal to noise ratio of the feature}
}
}
\description{
This function identifies features in the chromatographic
time domain as described in [Smith 2006]. The intensity values are
binned by cutting The LC/MS data into slices (bins) of a mass unit
(\code{binSize} m/z) wide. Within each bin the maximal intensity is
selected. The feature detection is then performed in each bin by
extending it based on the \code{steps} parameter to generate slices
comprising bins \code{current_bin - steps +1} to \code{current_bin + steps - 1}.
Each of these slices is then filtered with matched filtration using
a second-derative Gaussian as the model feature/peak shape. After filtration
features are detected using a signal-to-ration cut-off. For more details
and illustrations see [Smith 2006].
}
\details{
The intensities are binned by the provided m/z values within each
spectrum (scan). Binning is performed such that the bins are centered around
the m/z values (i.e. the first bin includes all m/z values between
\code{min(mz) - bin_size/2} and \code{min(mz) + bin_size/2}).

For more details on binning and missing value imputation see
\code{\link{binYonX}} and \code{\link{imputeLinInterpol}} methods.
}
\note{
This function exposes core feature detection functionality of
the \emph{matchedFilter} method. While this function can be called directly,
users will generally call the corresponding method for the data object
instead (e.g. the \code{link{findPeaks.matchedFilter}} method).
}
\examples{
## Load the test file
library(faahKO)
fs <- system.file('cdf/KO/ko15.CDF', package = "faahKO")
xr <- xcmsRaw(fs)

## Extracting the data from the xcmsRaw for do_detectFeatures_centWave
mzVals <- xr@env$mz
intVals <- xr@env$intensity
## Define the values per spectrum:
valsPerSpect <- diff(c(xr@scanindex, length(mzVals)))

res <- do_detectFeatures_matchedFilter(mz = mzVals, int = intVals,
scantime = xr@scantime, valsPerSpect = valsPerSpect)
head(res)
}
\author{
Colin A Smith, Johannes Rainer
}
\references{
Colin A. Smith, Elizabeth J. Want, Grace O'Maille, Ruben Abagyan and
Gary Siuzdak. "XCMS: Processing Mass Spectrometry Data for Metabolite
Profiling Using Nonlinear Peak Alignment, Matching, and Identification"
\emph{Anal. Chem.} 2006, 78:779-787.
}
\seealso{
\code{\link{binYonX}} for a binning function,
\code{\link{imputeLinInterpol}} for the interpolation of missing values.

Other core feature detection functions: \code{\link{do_detectFeatures_centWave}}
}

