% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataClasses.R, R/functions-Params.R
\docType{class}
\name{CentWaveParam-class}
\alias{CentWaveParam}
\alias{CentWaveParam-class}
\title{Feature detection using the centWave method}
\usage{
CentWaveParam(ppm = 25, peakwidth = c(20, 50), snthresh = 10,
  prefilter = c(3, 100), mzCenterFun = "wMean", integrate = 1L,
  mzdiff = -0.001, fitgauss = FALSE, noise = 0, verboseColumns = FALSE,
  roiList = list(), firstBaselineCheck = TRUE, roiScales = numeric())
}
\arguments{
\item{ppm}{Maximal tolerated m/z deviation in consecutive scans in parts
per million (ppm).}

\item{peakwidth}{Numeric of length 2 with the expected approximate
feature/peak width in chromatographic space. Given as a range (min, max)
in seconds.}

\item{snthresh}{Signal to noise ratio cutoff.}

\item{prefilter}{Numeric of length 2: \code{c(k, I)} specifying the prefilter
step for the first analysis step (ROI detection). Mass traces are only
retained if they contain at least \code{k} peaks with intensity >= \code{I}.}

\item{mzCenterFun}{Name of the function to calculate the m/z center of the
feature. Allowed are: \code{"wMean"}: intensity weighted mean of the feature's
m/z values, \code{"mean"}: mean of the feature's m/z values, \code{"apex"}:
use the m/z value at the peak apex, \code{"wMeanApex3"}: intensity weighted
mean of the m/z value at the peak apex and the m/z values left and right of
it and \code{"meanApex3"}: mean of the m/z value of the peak apex and the
m/z values left and right of it.}

\item{integrate}{Integration method. For \code{integrate = 1} peak limits
are found through descent on the mexican hat filtered data, for
\code{integrate = 2} the descent is done on the real data. The latter method
is more accurate but prone to noise, while the former is more robust, but
less exact.}

\item{mzdiff}{Numeric representing the minimum difference in m/z dimension
for peaks with overlapping retention times; can be negatove to allow overlap.}

\item{fitgauss}{Logical whether or not a Gaussian should be fitted to each
peak.}

\item{noise}{Numeric of length 1 allowing to set a minimum intensity required
for centroids to be considered in the first analysis step (centroids with
intensity \code{< noise} are omitted from ROI detection).}

\item{verboseColumns}{Logical whether additional feature meta data columns
should be returned.}

\item{roiList}{An optional list of regions-of-interest (ROI) representing
detected mass traces. If ROIs are submitted the first analysis step is
omitted and feature detection is performed on the submitted ROIs. Each
ROI object in the list is expected to have the following slots specified:
\code{scmin} (start scan index), \code{scmax} (end scan index),
\code{mzmin} (minimum m/z), \code{mzmax} (maximum m/z), \code{length}
(number of scans), \code{intensity} (summed intensity).}

\item{firstBaselineCheck}{Logical of length 1. If \code{TRUE} continuous
data within regions of interest is checked to be above the first baseline.}

\item{roiScales}{Optional numeric vector with length equal to \code{roiList}
defining the scale for each region of interest in \code{roiList} that should
be used for the centWave-wavelets.}
}
\value{
The \code{CentWaveParam} function returns a \code{CentWaveParam}
class instance with all of the settings specified for feature detection by
the centWave method.
}
\description{
The \code{CentWaveParam} class allows to specify all settings for
a feature detection using the centWave method.

\code{CentWaveParam}: constructor function for
\code{CentWaveParam} classes.
}
\section{Slots}{

\describe{
\item{\code{ppm,peakwidth,snthresh,prefilter,mzCenterFun,integrate,mzdiff,fitgauss,noise,verboseColumns,roiList,firstBaselinCheck,roiScales}}{See corresponding parameter above.}
}}

